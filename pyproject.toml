[tool.poetry]
name = "cosmos"
version = "0.0.0"
description = "Bink Provided Loyalty"
authors = ["Stewart Perrygrove <sperrygrove@bink.com>"]
readme = "README.md"

[[tool.poetry.source]]
name = "bink-pypi"
url = "https://pypi.tools.uksouth.bink.sh/simple"
default = false
secondary = false

[tool.poetry.scripts]
cosmos = "cosmos.core.cli:app"

[tool.poetry.dependencies]
python = "^3.10"
sqlalchemy = {version = "^1.4.43", extras = ["asyncio"]}
pydantic = "^1.10.2"
PyYAML = "^6.0"
sentry-sdk = "^1.10.1"
retry-tasks-lib = {version = "^2.0.0", source = "bink-pypi"}
azure-identity = "^1.11.0"
azure-keyvault = "^4.2.0"
rq = "^1.11.1"
redis = "^4.3.4"
alembic = "^1.8.1"
python-dotenv = "^0.21.0"
prettyprinter = "^0.18.0"
fastapi = "^0.86.0"
psycopg2-binary = "^2.9.5"
asyncpg = "^0.27.0"
uvicorn = {version = "^0.19.0", extras = ["standard"]}
typer = "^0.7.0"
prometheus-client = "0.12.0"
fastapi-prometheus-metrics = {version = "^0.2.3", source = "bink-pypi"}

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
pylint = "^2.15.5"
mypy = "^0.982"
isort = "^5.10.1"
types-PyYAML = "^6.0.12.1"
types-redis = "^4.3.21.3"
xenon = "^0.9.0"


[tool.poetry.group.pytest.dependencies]
pylint = "^2.15.5"
pylint-pytest = "^1.1.2"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
lines_between_types = 1

[tool.mypy]
disallow_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_incomplete_defs = true
warn_redundant_casts = true
# warn_unreachable = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin",
]

[tool.pylint.MASTER]
load-plugins=[
    "pylint_pytest",
    "pylint.extensions.mccabe"
]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "consider-using-f-string",
    "duplicate-code", # pylint definition of "duplicate" is way too loose (ex: fastapi route definitions are flagged).
]
good-names=["k", "v", "i", "q", "fn", "ex", "dt", "tz"]
extension-pkg-whitelist=[
    "pydantic",
]